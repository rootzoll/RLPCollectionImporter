/**
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.MdsForm;
import io.swagger.client.model.MdsList;
import io.swagger.client.model.MdsQueries;
import io.swagger.client.model.MdsRef;
import io.swagger.client.model.MdsType;
import io.swagger.client.model.MdsView;
import java.util.ArrayList;
import java.util.List;


/**
 * Mds
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-07-23T18:46:07.581+02:00")
public class Mds   {
  @SerializedName("types")
  private List<MdsType> types = new ArrayList<MdsType>();

  @SerializedName("ref")
  private MdsRef ref = null;

  @SerializedName("forms")
  private List<MdsForm> forms = new ArrayList<MdsForm>();

  @SerializedName("lists")
  private List<MdsList> lists = new ArrayList<MdsList>();

  @SerializedName("views")
  private List<MdsView> views = new ArrayList<MdsView>();

  @SerializedName("queries")
  private MdsQueries queries = null;

  public Mds types(List<MdsType> types) {
    this.types = types;
    return this;
  }

   /**
   * Get types
   * @return types
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public List<MdsType> getTypes() {
    return types;
  }

  public void setTypes(List<MdsType> types) {
    this.types = types;
  }

  public Mds ref(MdsRef ref) {
    this.ref = ref;
    return this;
  }

   /**
   * Get ref
   * @return ref
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public MdsRef getRef() {
    return ref;
  }

  public void setRef(MdsRef ref) {
    this.ref = ref;
  }

  public Mds forms(List<MdsForm> forms) {
    this.forms = forms;
    return this;
  }

   /**
   * Get forms
   * @return forms
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public List<MdsForm> getForms() {
    return forms;
  }

  public void setForms(List<MdsForm> forms) {
    this.forms = forms;
  }

  public Mds lists(List<MdsList> lists) {
    this.lists = lists;
    return this;
  }

   /**
   * Get lists
   * @return lists
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public List<MdsList> getLists() {
    return lists;
  }

  public void setLists(List<MdsList> lists) {
    this.lists = lists;
  }

  public Mds views(List<MdsView> views) {
    this.views = views;
    return this;
  }

   /**
   * Get views
   * @return views
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public List<MdsView> getViews() {
    return views;
  }

  public void setViews(List<MdsView> views) {
    this.views = views;
  }

  public Mds queries(MdsQueries queries) {
    this.queries = queries;
    return this;
  }

   /**
   * Get queries
   * @return queries
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public MdsQueries getQueries() {
    return queries;
  }

  public void setQueries(MdsQueries queries) {
    this.queries = queries;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Mds mds = (Mds) o;
    return Objects.equals(this.types, mds.types) &&
        Objects.equals(this.ref, mds.ref) &&
        Objects.equals(this.forms, mds.forms) &&
        Objects.equals(this.lists, mds.lists) &&
        Objects.equals(this.views, mds.views) &&
        Objects.equals(this.queries, mds.queries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(types, ref, forms, lists, views, queries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Mds {\n");
    
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("    ref: ").append(toIndentedString(ref)).append("\n");
    sb.append("    forms: ").append(toIndentedString(forms)).append("\n");
    sb.append("    lists: ").append(toIndentedString(lists)).append("\n");
    sb.append("    views: ").append(toIndentedString(views)).append("\n");
    sb.append("    queries: ").append(toIndentedString(queries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

