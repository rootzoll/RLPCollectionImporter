/**
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.NodeRef;
import io.swagger.client.model.UserProfile;
import java.util.ArrayList;
import java.util.List;


/**
 * User
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-07-23T18:46:07.581+02:00")
public class User   {
  @SerializedName("authorityName")
  private String authorityName = null;

  /**
   * Gets or Sets authorityType
   */
  public enum AuthorityTypeEnum {
    @SerializedName("USER")
    USER("USER"),
    
    @SerializedName("GROUP")
    GROUP("GROUP"),
    
    @SerializedName("OWNER")
    OWNER("OWNER"),
    
    @SerializedName("EVERYONE")
    EVERYONE("EVERYONE"),
    
    @SerializedName("GUEST")
    GUEST("GUEST");

    private String value;

    AuthorityTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("authorityType")
  private AuthorityTypeEnum authorityType = null;

  @SerializedName("userName")
  private String userName = null;

  @SerializedName("profile")
  private UserProfile profile = null;

  @SerializedName("homeFolder")
  private NodeRef homeFolder = null;

  @SerializedName("sharedFolders")
  private List<NodeRef> sharedFolders = new ArrayList<NodeRef>();

  public User authorityName(String authorityName) {
    this.authorityName = authorityName;
    return this;
  }

   /**
   * Get authorityName
   * @return authorityName
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getAuthorityName() {
    return authorityName;
  }

  public void setAuthorityName(String authorityName) {
    this.authorityName = authorityName;
  }

  public User authorityType(AuthorityTypeEnum authorityType) {
    this.authorityType = authorityType;
    return this;
  }

   /**
   * Get authorityType
   * @return authorityType
  **/
  @ApiModelProperty(example = "null", value = "")
  public AuthorityTypeEnum getAuthorityType() {
    return authorityType;
  }

  public void setAuthorityType(AuthorityTypeEnum authorityType) {
    this.authorityType = authorityType;
  }

  public User userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public User profile(UserProfile profile) {
    this.profile = profile;
    return this;
  }

   /**
   * Get profile
   * @return profile
  **/
  @ApiModelProperty(example = "null", value = "")
  public UserProfile getProfile() {
    return profile;
  }

  public void setProfile(UserProfile profile) {
    this.profile = profile;
  }

  public User homeFolder(NodeRef homeFolder) {
    this.homeFolder = homeFolder;
    return this;
  }

   /**
   * Get homeFolder
   * @return homeFolder
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public NodeRef getHomeFolder() {
    return homeFolder;
  }

  public void setHomeFolder(NodeRef homeFolder) {
    this.homeFolder = homeFolder;
  }

  public User sharedFolders(List<NodeRef> sharedFolders) {
    this.sharedFolders = sharedFolders;
    return this;
  }

   /**
   * Get sharedFolders
   * @return sharedFolders
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<NodeRef> getSharedFolders() {
    return sharedFolders;
  }

  public void setSharedFolders(List<NodeRef> sharedFolders) {
    this.sharedFolders = sharedFolders;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.authorityName, user.authorityName) &&
        Objects.equals(this.authorityType, user.authorityType) &&
        Objects.equals(this.userName, user.userName) &&
        Objects.equals(this.profile, user.profile) &&
        Objects.equals(this.homeFolder, user.homeFolder) &&
        Objects.equals(this.sharedFolders, user.sharedFolders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorityName, authorityType, userName, profile, homeFolder, sharedFolders);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    
    sb.append("    authorityName: ").append(toIndentedString(authorityName)).append("\n");
    sb.append("    authorityType: ").append(toIndentedString(authorityType)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    homeFolder: ").append(toIndentedString(homeFolder)).append("\n");
    sb.append("    sharedFolders: ").append(toIndentedString(sharedFolders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

