/**
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.NodeAccess;
import io.swagger.client.model.NodeRef;
import io.swagger.client.model.User;
import java.util.ArrayList;
import java.util.List;


/**
 * Collection
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-07-23T18:46:07.581+02:00")
public class Collection   {
  @SerializedName("ref")
  private NodeRef ref = null;

  @SerializedName("access")
  private List<NodeAccess> access = new ArrayList<NodeAccess>();

  @SerializedName("level0")
  private Boolean level0 = false;

  @SerializedName("title")
  private String title = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("viewtype")
  private String viewtype = null;

  @SerializedName("x")
  private Integer x = null;

  @SerializedName("y")
  private Integer y = null;

  @SerializedName("z")
  private Integer z = null;

  @SerializedName("color")
  private String color = null;

  @SerializedName("icon")
  private List<byte[]> icon = new ArrayList<byte[]>();

  @SerializedName("owner")
  private User owner = null;

  @SerializedName("childCollectionsCount")
  private Integer childCollectionsCount = null;

  @SerializedName("childReferencesCount")
  private Integer childReferencesCount = null;

  public Collection ref(NodeRef ref) {
    this.ref = ref;
    return this;
  }

   /**
   * Get ref
   * @return ref
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public NodeRef getRef() {
    return ref;
  }

  public void setRef(NodeRef ref) {
    this.ref = ref;
  }

  public Collection access(List<NodeAccess> access) {
    this.access = access;
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public List<NodeAccess> getAccess() {
    return access;
  }

  public void setAccess(List<NodeAccess> access) {
    this.access = access;
  }

  public Collection level0(Boolean level0) {
    this.level0 = level0;
    return this;
  }

   /**
   * false
   * @return level0
  **/
  @ApiModelProperty(example = "null", required = true, value = "false")
  public Boolean getLevel0() {
    return level0;
  }

  public void setLevel0(Boolean level0) {
    this.level0 = level0;
  }

  public Collection title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Collection description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Collection type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Collection viewtype(String viewtype) {
    this.viewtype = viewtype;
    return this;
  }

   /**
   * Get viewtype
   * @return viewtype
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getViewtype() {
    return viewtype;
  }

  public void setViewtype(String viewtype) {
    this.viewtype = viewtype;
  }

  public Collection x(Integer x) {
    this.x = x;
    return this;
  }

   /**
   * Get x
   * @return x
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getX() {
    return x;
  }

  public void setX(Integer x) {
    this.x = x;
  }

  public Collection y(Integer y) {
    this.y = y;
    return this;
  }

   /**
   * Get y
   * @return y
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getY() {
    return y;
  }

  public void setY(Integer y) {
    this.y = y;
  }

  public Collection z(Integer z) {
    this.z = z;
    return this;
  }

   /**
   * Get z
   * @return z
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getZ() {
    return z;
  }

  public void setZ(Integer z) {
    this.z = z;
  }

  public Collection color(String color) {
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }

  public Collection icon(List<byte[]> icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<byte[]> getIcon() {
    return icon;
  }

  public void setIcon(List<byte[]> icon) {
    this.icon = icon;
  }

  public Collection owner(User owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(example = "null", value = "")
  public User getOwner() {
    return owner;
  }

  public void setOwner(User owner) {
    this.owner = owner;
  }

  public Collection childCollectionsCount(Integer childCollectionsCount) {
    this.childCollectionsCount = childCollectionsCount;
    return this;
  }

   /**
   * Get childCollectionsCount
   * @return childCollectionsCount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getChildCollectionsCount() {
    return childCollectionsCount;
  }

  public void setChildCollectionsCount(Integer childCollectionsCount) {
    this.childCollectionsCount = childCollectionsCount;
  }

  public Collection childReferencesCount(Integer childReferencesCount) {
    this.childReferencesCount = childReferencesCount;
    return this;
  }

   /**
   * Get childReferencesCount
   * @return childReferencesCount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getChildReferencesCount() {
    return childReferencesCount;
  }

  public void setChildReferencesCount(Integer childReferencesCount) {
    this.childReferencesCount = childReferencesCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Collection collection = (Collection) o;
    return Objects.equals(this.ref, collection.ref) &&
        Objects.equals(this.access, collection.access) &&
        Objects.equals(this.level0, collection.level0) &&
        Objects.equals(this.title, collection.title) &&
        Objects.equals(this.description, collection.description) &&
        Objects.equals(this.type, collection.type) &&
        Objects.equals(this.viewtype, collection.viewtype) &&
        Objects.equals(this.x, collection.x) &&
        Objects.equals(this.y, collection.y) &&
        Objects.equals(this.z, collection.z) &&
        Objects.equals(this.color, collection.color) &&
        Objects.equals(this.icon, collection.icon) &&
        Objects.equals(this.owner, collection.owner) &&
        Objects.equals(this.childCollectionsCount, collection.childCollectionsCount) &&
        Objects.equals(this.childReferencesCount, collection.childReferencesCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ref, access, level0, title, description, type, viewtype, x, y, z, color, icon, owner, childCollectionsCount, childReferencesCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Collection {\n");
    
    sb.append("    ref: ").append(toIndentedString(ref)).append("\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    level0: ").append(toIndentedString(level0)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    viewtype: ").append(toIndentedString(viewtype)).append("\n");
    sb.append("    x: ").append(toIndentedString(x)).append("\n");
    sb.append("    y: ").append(toIndentedString(y)).append("\n");
    sb.append("    z: ").append(toIndentedString(z)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    childCollectionsCount: ").append(toIndentedString(childCollectionsCount)).append("\n");
    sb.append("    childReferencesCount: ").append(toIndentedString(childReferencesCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

