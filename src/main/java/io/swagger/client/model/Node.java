/**
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.NodeAccess;
import io.swagger.client.model.NodeProperty;
import io.swagger.client.model.NodeRef;
import io.swagger.client.model.Person;
import io.swagger.client.model.Preview;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;


/**
 * Node
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-07-23T21:01:37.657+02:00")
public class Node   {
  @SerializedName("ref")
  private NodeRef ref = null;

  @SerializedName("parent")
  private NodeRef parent = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("aspects")
  private List<String> aspects = new ArrayList<String>();

  @SerializedName("name")
  private String name = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("createdAt")
  private DateTime createdAt = null;

  @SerializedName("createdBy")
  private Person createdBy = null;

  @SerializedName("modifiedAt")
  private DateTime modifiedAt = null;

  @SerializedName("modifiedBy")
  private Person modifiedBy = null;

  @SerializedName("access")
  private List<NodeAccess> access = new ArrayList<NodeAccess>();

  @SerializedName("contentVersion")
  private String contentVersion = null;

  @SerializedName("contentUrl")
  private String contentUrl = null;

  @SerializedName("properties")
  private List<NodeProperty> properties = new ArrayList<NodeProperty>();

  @SerializedName("mimetype")
  private String mimetype = null;

  @SerializedName("size")
  private Long size = null;

  @SerializedName("preview")
  private Preview preview = null;

  public Node ref(NodeRef ref) {
    this.ref = ref;
    return this;
  }

   /**
   * Get ref
   * @return ref
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public NodeRef getRef() {
    return ref;
  }

  public void setRef(NodeRef ref) {
    this.ref = ref;
  }

  public Node parent(NodeRef parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @ApiModelProperty(example = "null", value = "")
  public NodeRef getParent() {
    return parent;
  }

  public void setParent(NodeRef parent) {
    this.parent = parent;
  }

  public Node type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Node aspects(List<String> aspects) {
    this.aspects = aspects;
    return this;
  }

   /**
   * Get aspects
   * @return aspects
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getAspects() {
    return aspects;
  }

  public void setAspects(List<String> aspects) {
    this.aspects = aspects;
  }

  public Node name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Node title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Node description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Node createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Node createdBy(Person createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public Person getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(Person createdBy) {
    this.createdBy = createdBy;
  }

  public Node modifiedAt(DateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * Get modifiedAt
   * @return modifiedAt
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(DateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  public Node modifiedBy(Person modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Get modifiedBy
   * @return modifiedBy
  **/
  @ApiModelProperty(example = "null", value = "")
  public Person getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(Person modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public Node access(List<NodeAccess> access) {
    this.access = access;
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public List<NodeAccess> getAccess() {
    return access;
  }

  public void setAccess(List<NodeAccess> access) {
    this.access = access;
  }

  public Node contentVersion(String contentVersion) {
    this.contentVersion = contentVersion;
    return this;
  }

   /**
   * Get contentVersion
   * @return contentVersion
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getContentVersion() {
    return contentVersion;
  }

  public void setContentVersion(String contentVersion) {
    this.contentVersion = contentVersion;
  }

  public Node contentUrl(String contentUrl) {
    this.contentUrl = contentUrl;
    return this;
  }

   /**
   * Get contentUrl
   * @return contentUrl
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getContentUrl() {
    return contentUrl;
  }

  public void setContentUrl(String contentUrl) {
    this.contentUrl = contentUrl;
  }

  public Node properties(List<NodeProperty> properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<NodeProperty> getProperties() {
    return properties;
  }

  public void setProperties(List<NodeProperty> properties) {
    this.properties = properties;
  }

  public Node mimetype(String mimetype) {
    this.mimetype = mimetype;
    return this;
  }

   /**
   * Get mimetype
   * @return mimetype
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getMimetype() {
    return mimetype;
  }

  public void setMimetype(String mimetype) {
    this.mimetype = mimetype;
  }

  public Node size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public Node preview(Preview preview) {
    this.preview = preview;
    return this;
  }

   /**
   * Get preview
   * @return preview
  **/
  @ApiModelProperty(example = "null", value = "")
  public Preview getPreview() {
    return preview;
  }

  public void setPreview(Preview preview) {
    this.preview = preview;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Node node = (Node) o;
    return Objects.equals(this.ref, node.ref) &&
        Objects.equals(this.parent, node.parent) &&
        Objects.equals(this.type, node.type) &&
        Objects.equals(this.aspects, node.aspects) &&
        Objects.equals(this.name, node.name) &&
        Objects.equals(this.title, node.title) &&
        Objects.equals(this.description, node.description) &&
        Objects.equals(this.createdAt, node.createdAt) &&
        Objects.equals(this.createdBy, node.createdBy) &&
        Objects.equals(this.modifiedAt, node.modifiedAt) &&
        Objects.equals(this.modifiedBy, node.modifiedBy) &&
        Objects.equals(this.access, node.access) &&
        Objects.equals(this.contentVersion, node.contentVersion) &&
        Objects.equals(this.contentUrl, node.contentUrl) &&
        Objects.equals(this.properties, node.properties) &&
        Objects.equals(this.mimetype, node.mimetype) &&
        Objects.equals(this.size, node.size) &&
        Objects.equals(this.preview, node.preview);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ref, parent, type, aspects, name, title, description, createdAt, createdBy, modifiedAt, modifiedBy, access, contentVersion, contentUrl, properties, mimetype, size, preview);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Node {\n");
    
    sb.append("    ref: ").append(toIndentedString(ref)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    aspects: ").append(toIndentedString(aspects)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    contentVersion: ").append(toIndentedString(contentVersion)).append("\n");
    sb.append("    contentUrl: ").append(toIndentedString(contentUrl)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    mimetype: ").append(toIndentedString(mimetype)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    preview: ").append(toIndentedString(preview)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

