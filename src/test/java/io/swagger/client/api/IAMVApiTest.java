/**
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ErrorResponse;
import io.swagger.client.model.GroupProfile;
import io.swagger.client.model.UserCredential;
import io.swagger.client.model.UserProfile;
import io.swagger.client.model.GroupEntry;
import io.swagger.client.model.AuthorityEntries;
import io.swagger.client.model.UserEntry;
import io.swagger.client.model.GroupEntries;
import io.swagger.client.model.UserEntries;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IAMVApi
 */
public class IAMVApiTest {

    private final IAMVApi api = new IAMVApi();

    
    /**
     * Add member to the group.
     *
     * Add member to the group. (admin rights are required.)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addMembershipTest() throws ApiException {
        String repository = null;
        String group = null;
        String member = null;
        // api.addMembership(repository, group, member);

        // TODO: test validations
    }
    
    /**
     * Set profile of the group.
     *
     * Set profile of the group. (admin rights are required.)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeGroupProfileTest() throws ApiException {
        String repository = null;
        String group = null;
        GroupProfile body = null;
        // api.changeGroupProfile(repository, group, body);

        // TODO: test validations
    }
    
    /**
     * Change/Set password of the user.
     *
     * Change/Set password of the user. (To change foreign passwords or set passwords, admin rights are required.)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeUserPasswordTest() throws ApiException {
        String repository = null;
        String person = null;
        UserCredential body = null;
        // api.changeUserPassword(repository, person, body);

        // TODO: test validations
    }
    
    /**
     * Set profile of the user.
     *
     * Set profile of the user. (To set foreign profiles, admin rights are required.)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeUserProfileTest() throws ApiException {
        String repository = null;
        String person = null;
        UserProfile body = null;
        // api.changeUserProfile(repository, person, body);

        // TODO: test validations
    }
    
    /**
     * Create a new group.
     *
     * Create a new group. (admin rights are required.)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createGroupTest() throws ApiException {
        String repository = null;
        String group = null;
        GroupProfile body = null;
        // api.createGroup(repository, group, body);

        // TODO: test validations
    }
    
    /**
     * Create a new user.
     *
     * Create a new user. (admin rights are required.)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        String repository = null;
        String person = null;
        UserProfile body = null;
        // api.createUser(repository, person, body);

        // TODO: test validations
    }
    
    /**
     * Delete the group.
     *
     * Delete the group. (admin rights are required.)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteGroupTest() throws ApiException {
        String repository = null;
        String group = null;
        // api.deleteGroup(repository, group);

        // TODO: test validations
    }
    
    /**
     * Delete member from the group.
     *
     * Delete member from the group. (admin rights are required.)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMembershipTest() throws ApiException {
        String repository = null;
        String group = null;
        String member = null;
        // api.deleteMembership(repository, group, member);

        // TODO: test validations
    }
    
    /**
     * Delete the user.
     *
     * Delete the user. (admin rights are required.)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        String repository = null;
        String person = null;
        // api.deleteUser(repository, person);

        // TODO: test validations
    }
    
    /**
     * Get the group.
     *
     * Get the group. (To get foreign profiles, admin rights are required.)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGroupTest() throws ApiException {
        String repository = null;
        String group = null;
        // GroupEntry response = api.getGroup(repository, group);

        // TODO: test validations
    }
    
    /**
     * Get all members of the group.
     *
     * Get all members of the group. (admin rights are required.)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMembershipTest() throws ApiException {
        String repository = null;
        String group = null;
        // AuthorityEntries response = api.getMembership(repository, group);

        // TODO: test validations
    }
    
    /**
     * Get the user.
     *
     * Get the user. (To get foreign profiles, admin rights are required.)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserTest() throws ApiException {
        String repository = null;
        String person = null;
        // UserEntry response = api.getUser(repository, person);

        // TODO: test validations
    }
    
    /**
     * Search groups.
     *
     * Search groups. (admin rights are required.)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchGroupTest() throws ApiException {
        String repository = null;
        String pattern = null;
        // GroupEntries response = api.searchGroup(repository, pattern);

        // TODO: test validations
    }
    
    /**
     * Search users.
     *
     * Search users. (admin rights are required.)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchUserTest() throws ApiException {
        String repository = null;
        String pattern = null;
        // UserEntries response = api.searchUser(repository, pattern);

        // TODO: test validations
    }
    
}
